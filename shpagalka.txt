4-rd
00.50.00
////////// Выбор селектора по атрибуту value
<input type="radio" name="language" value="python" checked>
<input type="radio" name="language" value="selenium">
---
option1 = browser.find_element(By.CSS_SELECTOR, "[value='python']")
option1.click()
///////// Выбор по атирбуту label
<div>
  <input type="radio" id="java" name="language">
  <label for="java">Java</label>
</div>
----
option1 = browser.find_element(By.CSS_SELECTOR, "[for='java']")
option1.click()
////////////////// Проверка атрибута радиокнопки
people_radio = browser.find_element(BY.ID, "peopleRule")
people_checked = people_radio.get_attribute("checked") # Если выбран, значит будет true, false если его нет.
print("value of people radio: ", people_checked)
assert people_checked is not None
assert robots_checked is None
//////////////////////
////////////// JavaScript
browser.execute_script("alert('Robots at work');")
browser.execute_script("document.title='Script executing';")
browser.execute_script("document.title='Script executing';alert('Robots at work');")
//////////////////
///////////////заставить браузер дополнительно проскроллить нужный элемент
button = browser.find_element_by_tag_name("button")
browser.execute_script("return arguments[0].scrollIntoView(true);", button)
button.click()
--------- Эта команда проскроллит страницу на 100 пикселей вниз:
browser.execute_script("window.scrollBy(0, 100);")
/////////////////////////////////////////////////////////////////
////////////////////////  Загрузка файла
Пример кода, который позволяет указать путь к файлу 'file.txt', находящемуся в той же папке, что и скрипт, который вы запускаете:
import os

current_dir = os.path.abspath(os.path.dirname(__file__))    # получаем путь к директории текущего исполняемого файла
file_path = os.path.join(current_dir, 'file.txt')           # добавляем к этому пути имя файла
element.send_keys(file_path)
/////////////////////////////////////
/////////////////////  нажать кнопку OK, чтобы закрыть alert (только ОК)
alert = browser.switch_to.alert
alert.accept()
Чтобы получить текст из alert, используйте свойство text объекта alert:
alert = browser.switch_to.alert
alert_text = alert.text
---------
Другой вариант модального окна, который предлагает пользователю выбор согласиться с
сообщением или отказаться от него, называется confirm. (Отмена  и ОК)
confirm = browser.switch_to.alert
confirm.accept()
Для confirm-окон можно использовать следующий метод для отказа:
confirm.dismiss()  # То же самое, что и при нажатии пользователем кнопки "Отмена".
-----------
Третий вариант модального окна — prompt — имеет дополнительное поле для ввода текста.
Чтобы ввести текст, используйте метод send_keys():
prompt = browser.switch_to.alert
prompt.send_keys("My answer")
prompt.accept()
////////////////////////////////////////